[{"/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/index.js":"1","/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/App.js":"2","/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/reportWebVitals.js":"3","/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/components/NavBar.js":"4","/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/components/Home.js":"5","/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/components/SignUp.js":"6","/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/components/LogIn.js":"7","/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/components/Footer.js":"8","/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/components/MyProfile.js":"9","/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/services/UserService.js":"10","/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/components/NewTravelForm.js":"11","/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/components/MyTravels.js":"12","/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/services/TravelService.js":"13","/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/services/FileService.js":"14","/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/components/MySingleTravel.js":"15","/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/components/SingleFile.js":"16","/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/components/NewFileForm.js":"17"},{"size":591,"mtime":1608153672012,"results":"18","hashOfConfig":"19"},{"size":2011,"mtime":1608153672007,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1608153672013,"results":"21","hashOfConfig":"19"},{"size":1361,"mtime":1608153672009,"results":"22","hashOfConfig":"19"},{"size":336,"mtime":1608208850287,"results":"23","hashOfConfig":"19"},{"size":3883,"mtime":1608153672010,"results":"24","hashOfConfig":"19"},{"size":2776,"mtime":1608153672008,"results":"25","hashOfConfig":"19"},{"size":549,"mtime":1608153672008,"results":"26","hashOfConfig":"19"},{"size":3044,"mtime":1608206305814,"results":"27","hashOfConfig":"19"},{"size":812,"mtime":1608209268114,"results":"28","hashOfConfig":"19"},{"size":5686,"mtime":1608204159857,"results":"29","hashOfConfig":"19"},{"size":3353,"mtime":1608206234490,"results":"30","hashOfConfig":"19"},{"size":1218,"mtime":1608209256565,"results":"31","hashOfConfig":"19"},{"size":1579,"mtime":1608209247577,"results":"32","hashOfConfig":"19"},{"size":8659,"mtime":1608207875175,"results":"33","hashOfConfig":"19"},{"size":4418,"mtime":1608208238755,"results":"34","hashOfConfig":"19"},{"size":6205,"mtime":1608153672009,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1cxqqpk",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/index.js",[],["73","74"],"/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/App.js",[],"/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/reportWebVitals.js",[],"/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/components/NavBar.js",[],"/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/components/Home.js",[],"/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/components/SignUp.js",[],"/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/components/LogIn.js",[],"/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/components/Footer.js",[],"/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/components/MyProfile.js",[],"/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/services/UserService.js",[],"/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/components/NewTravelForm.js",[],"/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/components/MyTravels.js",["75"],"import React from 'react'\n\n//DEPENDENCIAS\nimport TravelService from '../services/TravelService'\nimport FileService from '../services/FileService';\nimport MySingleTravel from './MySingleTravel'\nimport {Container, Row, Col, ListGroup, Button} from 'react-bootstrap'\n\nclass MyTravels extends React.Component {\n\n  state={\n      singleTravel: {},\n      mySingleTravelFiles: [],\n      // allTravels: this.props.allTravels,\n    }\n\n    //ConexiÃ³n Travel & File Service\n    travelService = new TravelService();\n    fileService = new FileService();\n  \n            // GET DATA FROM DB\n            \n  // SINGLE TRAVEL INFO\n  getSingleTravelData = (_id, responseTravelFiles)=>{\n    this.travelService.getTravel(_id)\n    .then((responseSingleTravel)=>{\n        this.setState({singleTravel: responseSingleTravel, mySingleTravelFiles: responseTravelFiles})\n    })\n    .catch((err)=>{\n      return err\n    })\n  }\n\n  //AQUI ---------------------------\n  // SINGLE TRAVEL FILES INFO\n  getFilesData = (travelID)=>{\n    this.fileService.getTravelFiles(travelID)\n    .then((responseTravelFiles)=>{\n      this.getSingleTravelData(travelID, responseTravelFiles)\n    })\n  }\n\n  // EMPTY STATE & GET TRAVEL DATA AGAIN\n  clearSingleTravel = async () => {\n    await this.setState({mySingleTravelFiles: []})\n    await this.props.getTravelData()\n    this.setState({singleTravel: {}})\n    \n  }\n\n  //          RENDER\n\n  render() {\n\n    const buttonText = !this.props.showNewTravelForm ? 'Add new travel' : 'Back to my travels'\n\n\n    if(!this.state.singleTravel._id && this.props.allTravels.length !== 0) {\n      return (\n\n          <div>\n            <Container>\n              <Row >\n                <Col lg=\"6\" className=\"mx-auto\">\n                <Button variant=\"secondary\" className=\"text-center\" onClick={this.props.handleNewTravelForm}>{buttonText}</Button>\n                  <h3>MY TRAVELS</h3>\n                  <ListGroup className=\"my-travels-list\">\n                    \n                    {this.props.allTravels.sort((a, b)=> new Date(a.startDate) - new Date(b.startDate)).map((travel, index)=>(\n                    <ListGroup.Item\n                      key={index}\n                      onClick={()=>this.getFilesData(travel._id)}\n                      action\n                      >\n                        <p>{travel.travelName}</p>\n                        <p>{travel.startDateFixed}</p>\n                    </ListGroup.Item>\n                    ))}\n\n                  </ListGroup>\n                </Col>\n              </Row>\n            </Container>\n          </div>\n\n      )\n    } else if (this.state.singleTravel._id && this.props.allTravels.length !== 0){\n      return(\n        <div> \n          {/* <Button className=\"mb-3\" onClick={this.clearSingleTravel}>Back to my travels</Button> */}\n          <h2>{this.state.singleTravel.travelName}</h2>\n          <h5>{this.state.singleTravel.startDateFixed} - {this.state.singleTravel.endDateFixed}</h5>\n          <MySingleTravel singleTravel={this.state.singleTravel} mySingleTravelFiles={this.state.mySingleTravelFiles} getFilesData={this.getFilesData} clearSingleTravel={this.clearSingleTravel}/>\n        </div>\n      )  \n\n    } else if (this.props.allTravels.length === 0 && !this.state.singleTravel._id){\n      return(\n         <div>\n          <Container>\n            <Row>\n              <Col>\n                  <p>You haven't added any travels yet. Add your next destination so you can organize all your files.</p>\n              </Col>\n            </Row>\n          </Container>\n         </div> \n\n      )\n\n    }\n  }\n}\n\nexport default MyTravels","/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/services/TravelService.js",[],"/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/services/FileService.js",[],"/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/components/MySingleTravel.js",["76"],"import React from 'react'\nimport NewFileForm from './NewFileForm'\nimport SingleFile from './SingleFile'\n\n//DEPENDENCIAS\nimport FileService from '../services/FileService';\nimport TravelService from '../services/TravelService'\nimport {Container, Row, Col, Button, ListGroup, Alert, DropdownButton, Dropdown} from 'react-bootstrap'\n\n\nclass MySingleTravel extends React.Component {\n\n    state= {\n        showSingleFile: false,\n        showNewFileForm: false, \n        singleFile: '',\n        mySingleTravelFiles: this.props.mySingleTravelFiles,\n        filteredFiles: this.props.mySingleTravelFiles,\n        deleteMessage: false\n    }\n\n    //ConexiÃ³n Travel & File Service\n    travelService = new TravelService();\n    fileService = new FileService();\n\n    //          GET DATA FROM DB\n            \n    // SINGLE FILE INFO\n    getSingleFile = (_id)=>{\n        this.fileService.getFile(_id)\n        .then((response)=>{\n            this.setState({singleFile: response})\n        })\n    }\n\n    // GET SINGLE TRAVEL FILES\n    getFilesData = (travelID)=>{\n        this.fileService.getTravelFiles(travelID)\n        .then((response)=>{\n            this.setState({mySingleTravelFiles: response, filteredFiles: response})\n            \n        })\n      }\n\n    // DELETE TRAVEL\n\n    deleteTravel = (travelID) =>{\n        this.travelService.deleteTravel(travelID)\n        .then(()=>{\n            this.setState({deleteMessage: true})\n        })\n    }\n\n    //          HANDLE FUNCTIONS\n\n    //HOTEL FILTER\n    handleSearchTravelFilesHotel = () => {\n        const hotelReservation = this.state.mySingleTravelFiles.filter((file) => (\n            file.category === 'Hotel Reservation'\n        ))\n        this.setState({filteredFiles: hotelReservation})\n    }\n\n    //EXPERIENCE FILTER\n    handleSearchTravelFilesExperience = () => {\n        const experience = this.state.mySingleTravelFiles.filter((file) => (\n            file.category === 'Experience Ticket'\n        ))\n        this.setState({filteredFiles: experience})\n    }\n\n    //TRANSPORT FILTER\n    handleSearchTravelFilesTransport = () => {\n        const transport = this.state.mySingleTravelFiles.filter((file) => (\n            file.category === 'Transport Ticket'\n        ))\n        this.setState({filteredFiles: transport})\n    }\n\n    //OTHER FILTER\n    handleSearchTravelFilesOther = () => {\n        const other = this.state.mySingleTravelFiles.filter((file) => (\n            file.category === 'Other'\n        ))\n        this.setState({filteredFiles: other})\n    }\n\n    //RESTART FILTERS\n    handleRestartFilters = () => {\n        this.getFilesData(this.props.singleTravel._id)\n    }\n\n    //SHOW FILE FORM\n    handleNewFileForm = ()=>{\n        this.setState(\n            {showNewFileForm: !this.state.showNewFileForm}\n        )\n    }\n    \n    // SHOW SINGLE FILE\n    handleSingleFile = async (fileID)=>{\n        const travelID = this.props.singleTravel._id\n        await this.getSingleFile(fileID)\n        await this.getFilesData(travelID)\n        this.setState( {showSingleFile: !this.state.showSingleFile})\n    }\n\n    handleBackToTravel = async (travelID)=> {\n        await this.getFilesData(travelID)\n        this.setState({showNewFileForm: !this.state.showNewFileForm})\n    }\n\n    handleDeleteTravel = (travelID)=>{\n        this.deleteTravel(travelID)\n    }\n\n\n    render() {\n                        // ESTO CÃMO PUEDE SER QUE ESTÃ FUNCIONANDO AL REVÃS???\n\n        if(!this.state.showNewFileForm) {        \n            if(this.state.showSingleFile) {\n                return (\n                    <div>\n                        <Button className=\"mt-2\" onClick={this.handleSingleFile}>SHOW ALL FILES</Button>\n                        <SingleFile singleFile={this.state.singleFile} singleTravelID={this.props.singleTravel._id} />\n                    </div>\n                )\n            } else if (!this.state.showSingleFile && !this.state.deleteMessage){\n                return (\n                    <div>\n                        <Container>\n\n                            <Row>\n                                <Col className=\"mt-2 mb-2\">\n                                    <Button variant=\"outline-danger\" onClick={()=>this.handleDeleteTravel(this.props.singleTravel._id)}>Delete Travel</Button>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col className=\"mt-2 mb-2\">\n\n                                        <DropdownButton className=\"mb-3\" variant=\"secondary\" id=\"dropdown-basic-button\" title=\"CATEGORIES FILTERS\" >\n                                            <Dropdown.Item onClick={this.handleSearchTravelFilesHotel}>Hotel Reservation</Dropdown.Item>\n                                            <Dropdown.Item onClick={this.handleSearchTravelFilesExperience}>Experience Ticket</Dropdown.Item>\n                                            <Dropdown.Item onClick={this.handleSearchTravelFilesTransport}>Transport Ticket</Dropdown.Item>\n                                            <Dropdown.Item onClick={this.handleSearchTravelFilesOther}>Other</Dropdown.Item>\n                                            <Dropdown.Item onClick={this.handleRestartFilters}>Restart Filters</Dropdown.Item>\n                                        </DropdownButton>\n\n                                        <Button className=\"mb-3\" onClick={this.props.clearSingleTravel}>SHOW ALL MY TRAVELS</Button>\n\n                                    \n\n                                    {/* <ButtonGroup  className=\"mb-2\">\n                                        <Button variant=\"outline-danger\" onClick={this.handleSearchTravelFilesHotel}>Hotel Reservation</Button>\n                                        <Button variant=\"outline-info\" onClick={this.handleSearchTravelFilesExperience}>Experience Ticket</Button>\n                                        <Button onClick={this.handleSearchTravelFilesTransport}>Transport Ticket</Button>\n                                        <Button onClick={this.handleSearchTravelFilesOther}>Other</Button>\n                                        <Button onClick={this.handleRestartFilters}>Restart Filters</Button>\n                                    </ButtonGroup> */}\n                                   \n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col lg=\"6\" className=\"mx-auto\">\n                                    <ListGroup className=\"\">\n                                        <ListGroup.Item action>\n                                            <h4 onClick={this.handleNewFileForm}>ADD A NEW FILE</h4>\n                                        </ListGroup.Item>\n                                            {this.state.filteredFiles.sort((a, b)=> new Date(a.date) - new Date(b.date)).map((singleFile, index)=>(\n                                            <ListGroup.Item \n                                                key={index}\n                                                onClick={()=>this.handleSingleFile(singleFile._id)}\n                                                action\n                                                >\n                                                <p>{singleFile.fileName}</p>\n                                                <p>{singleFile.fixedDate}</p>\n                                            </ListGroup.Item>    \n                                        ))}\n                                        </ListGroup>\n                                </Col>\n                            </Row>\n                        </Container>\n\n                    </div>\n                )\n            } else if (this.state.deleteMessage && !this.state.showSingleFile){\n                return(\n                    <div>\n                        <Container>\n                            <Row>\n                                <Col>\n                                    <Alert variant=\"danger\">\n                                    Your travel has been removed successfully.\n                                    </Alert>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </div>\n                )\n            } \n        } else if(this.state.showNewFileForm) {\n            return(\n                <div>\n                    <NewFileForm singleTravelID={this.props.singleTravel._id}/>\n                    <Button onClick={()=>this.handleBackToTravel(this.props.singleTravel._id)}>Back to {this.props.singleTravel.travelName}</Button>\n                </div>\n            )\n        }     \n    }\n}\n\nexport default MySingleTravel","/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/components/SingleFile.js",[],"/Users/Jesus/Desktop/IRONHACK/1 MODULE 1/8 WEEK/PROYECTO FINAL/MY TRAVEL FOLIO/my-travel-folio-FRONT/src/components/NewFileForm.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":7,"column":41,"nodeType":"83","messageId":"84","endLine":7,"endColumn":47},{"ruleId":"81","severity":1,"message":"85","line":8,"column":30,"nodeType":"83","messageId":"84","endLine":8,"endColumn":41},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'ButtonGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]